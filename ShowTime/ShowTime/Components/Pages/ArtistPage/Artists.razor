@page "/artists"
@using Microsoft.AspNetCore.Authorization
@using ShowTime_BusinessLogic
@using ShowTime_BusinessLogic.Abstractions
@using ShowTime_BusinessLogic.Dtos
@using ShowTime_BusinessLogic.Dtos.Artist
@rendermode InteractiveServer
@inject IArtistService ArtistService
@inject NavigationManager NavManager
@inject IJSRuntime JS


<PageTitle>ShowTime - Artists</PageTitle>

<div class="artists-page">
    <!-- Enhanced Festival Decorations -->
    <div class="festival-decoration">
        @for (int i = 0; i < 25; i++)
        {
            <div class="sparkle" style="left: @(Random.Shared.Next(0, 100))%; top: @(Random.Shared.Next(0, 100))%; animation-delay: @(Random.Shared.Next(0, 4000))ms;"></div>
        }
        
        @for (int i = 0; i < 12; i++)
        {
            <div class="floating-element music-note" style="left: @(Random.Shared.Next(5, 95))%; animation-delay: @(Random.Shared.Next(0, 12000))ms;">♪</div>
        }
        
        @for (int i = 0; i < 8; i++)
        {
            <div class="soft-glow" style="left: @(Random.Shared.Next(10, 90))%; top: @(Random.Shared.Next(20, 80))%; animation-delay: @(Random.Shared.Next(0, 8000))ms;"></div>
        }
        
        @for (int i = 0; i < 6; i++)
        {
            <div class="geometric-shape triangle" style="left: @(Random.Shared.Next(5, 95))%; top: @(Random.Shared.Next(10, 90))%; animation-delay: @(Random.Shared.Next(0, 8000))ms;"></div>
        }
        
        @for (int i = 0; i < 8; i++)
        {
            <div class="geometric-shape circle" style="left: @(Random.Shared.Next(5, 95))%; top: @(Random.Shared.Next(10, 90))%; animation-delay: @(Random.Shared.Next(0, 6000))ms;"></div>
        }
        
        @for (int i = 0; i < 4; i++)
        {
            <div class="floating-element star" style="left: @(Random.Shared.Next(5, 95))%; animation-delay: @(Random.Shared.Next(0, 15000))ms;">★</div>
        }
        
        @for (int i = 0; i < 3; i++)
        {
            <div class="animated-line" style="top: @(Random.Shared.Next(20, 80))%; width: @(Random.Shared.Next(100, 300))px; animation-delay: @(Random.Shared.Next(0, 6000))ms;"></div>
        }
        
        @for (int i = 0; i < 5; i++)
        {
            <div class="floating-element heart" style="left: @(Random.Shared.Next(5, 95))%; animation-delay: @(Random.Shared.Next(0, 18000))ms;">♥</div>
        }
    </div>

    <!-- Animated Background Elements -->
    <div class="background-elements">
        <div class="bg-circle bg-circle-1"></div>
        <div class="bg-circle bg-circle-2"></div>
        <div class="bg-circle bg-circle-3"></div>
        <div class="bg-square bg-square-1"></div>
        <div class="bg-square bg-square-2"></div>
    </div>

    <div class="page-header">
        <div class="title-decoration">
            <div class="title-sparkle">✨</div>
            <h1 class="page-title neon-text">🎤 Artists Gallery 🎤</h1>
            <div class="title-sparkle">✨</div>
        </div>
        <p class="page-subtitle">Discover Amazing Performers</p>
        
        <div class="animated-notes">
            <span>🎧</span> <span>🎸</span> <span>🎹</span> <span>🎺</span> <span>🎻</span> <span>🥁</span> <span>🎤</span>
        </div>
        
        <div class="header-decoration">
            <div class="decoration-line"></div>
            <div class="decoration-dot"></div>
            <div class="decoration-line"></div>
        </div>
    </div>

    @if (pagedArtists.Count == 0)
    {
        <div class="empty-state">
            <div class="empty-icon">🎵</div>
            <h3>No Artists Yet</h3>
            <p>Be the first to add amazing performers to the festival!</p>
            <div class="empty-decoration">
                <span>🎭</span> <span>🎪</span> <span>🎆</span>
            </div>
        </div>
    }
    else
    {
        <div class="artists-container">
           <AuthorizeView Roles="Administrator">
                  <Authorized Context ="authContext"> 
                      <div class="add-artist-card" @onclick="NavigateToAddArtist">
                        <div class="add-icon">+</div>
                        <h3>Add New Artist</h3>
                        <p>Share the stage with amazing talent</p>
                        <div class="add-decoration">
                            <span>🎤</span> <span>✨</span> <span>🎵</span>
                        </div>
                      </div>
                 </Authorized>
            </AuthorizeView>

            @foreach (var artist in pagedArtists)
            {
                <div class="artist-card" @onclick="() => NavigateToArtist(artist.Id)" style="cursor:pointer;">

                    <AuthorizeView Roles="Administrator">
                        <Authorized Context ="authContext">
                        <div class="artist-actions">
                        <button class="action-btn edit-btn" @onclick:stopPropagation="true" @onclick="() => EditArtist(artist.Id)" title="Edit Artist">
                            <i class="fa-solid fa-pen"></i>
                        </button>
                        <button class="action-btn delete-btn" @onclick:stopPropagation="true" @onclick="() => DeleteArtist(artist.Id)" title="Delete Artist">
                            <i class="fa-solid fa-trash"></i>
                        </button>
                        </div></Authorized>
                    </AuthorizeView>

                    <div class="artist-image">
                        <img src="@artist.Image" alt="@artist.Name" />
                        <div class="image-overlay"></div>
                        <div class="artist-badge">🎤</div>
                        <div class="image-decoration">
                            <span>✨</span> <span>🎵</span>
                        </div>
                    </div>
                    
                    <div class="artist-info">
                        <h3 class="artist-name">@artist.Name</h3>
                        <p class="artist-genre">@artist.Genre</p>
                        
                        <!-- Enhanced Artist Stats -->
                        <div class="artist-stats">
                            @if (artist.IsTrending)
                            {
                                <span class="stat trending-stat">
                                    <i class="fas fa-fire"></i> Trending
                                </span>
                            }
                            <span class="stat rating-stat">
                                <i class="fas fa-star"></i> @artist.Rating.ToString("F1")/5.0
                            </span>
                            <span class="stat fans-stat">
                                <i class="fas fa-heart"></i> @artist.FansCount.ToString("N0") fans
                            </span>
                            @if (artist.DebutYear > 0)
                            {
                                <span class="stat debut-stat">
                                    <i class="fas fa-calendar"></i> @artist.DebutYear
                                </span>
                            }
                        </div>

                        <!-- Category Badge -->
                        <div class="category-badge">
                            <i class="fas fa-music"></i> @artist.Category
                        </div>

                        <!-- Artist Details -->
                        <div class="artist-details">
                            @if (!string.IsNullOrEmpty(artist.Origin))
                            {
                                <div class="detail-item">
                                    <i class="detail-icon fas fa-map-marker-alt"></i>
                                    <span class="detail-label">Origin:</span>
                                    <span class="detail-value">@artist.Origin</span>
                                </div>
                            }
                            
                            @if (artist.IsTrending && !string.IsNullOrEmpty(artist.TrendingReason))
                            {
                                <div class="detail-item">
                                    <i class="detail-icon fas fa-fire"></i>
                                    <span class="detail-label">Trending:</span>
                                    <span class="detail-value">@artist.TrendingReason</span>
                                </div>
                            }
                            
                            @if (!string.IsNullOrEmpty(artist.Description))
                            {
                                <div class="detail-item">
                                    <i class="detail-icon fas fa-info-circle"></i>
                                    <span class="detail-label">About:</span>
                                    <span class="detail-value">@artist.Description</span>
                                </div>
                            }
                        </div>

                        <!-- Social Links -->
                        @if (!string.IsNullOrEmpty(artist.Instagram) || !string.IsNullOrEmpty(artist.YouTube))
                        {
                            <div class="social-links">
                                @if (!string.IsNullOrEmpty(artist.Instagram))
                                {
                                    <a href="@artist.Instagram" target="_blank" class="social-link">
                                        <i class="social-icon fab fa-instagram"></i>
                                        <span>Instagram</span>
                                    </a>
                                }
                                @if (!string.IsNullOrEmpty(artist.YouTube))
                                {
                                    <a href="@artist.YouTube" target="_blank" class="social-link">
                                        <i class="social-icon fab fa-youtube"></i>
                                        <span>YouTube</span>
                                    </a>
                                }
                            </div>
                        }

                        <div class="artist-decoration">
                            <span>🎭</span> <span>🎪</span> <span>🎆</span>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (totalPages > 1)
        {
            <div class="pagination-container">
                <div class="pagination-decoration">
                    <span>🎵</span> <span>✨</span> <span>🎤</span>
                </div>
                <div class="pagination">
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <button class="page-btn @(currentPage == i ? "active" : "")" @onclick="() => ChangePage(i)">
                            @i
                        </button>
                    }
                </div>
                <div class="pagination-decoration">
                    <span>🎭</span> <span>🎪</span> <span>🎆</span>
                </div>
            </div>
        }
    }
</div>

@code {
    private IList<ArtistGetDto> artists = new List<ArtistGetDto>();
    private List<ArtistGetDto> pagedArtists = new();
    private int currentPage = 1;
    private int itemsPerPage = 16;
    private int totalPages;

    protected override async Task OnInitializedAsync()
    {
        artists = await ArtistService.GetAllAsync();
        totalPages = (int)Math.Ceiling(artists.Count / (double)itemsPerPage);
        UpdatePagedArtists();
    }

    private void ChangePage(int page)
    {
        currentPage = page;
        UpdatePagedArtists();
    }

    private void UpdatePagedArtists()
    {
        pagedArtists = artists
            .Skip((currentPage - 1) * itemsPerPage)
            .Take(itemsPerPage)
            .ToList();
    }

    private void EditArtist(int id)
    {
        NavManager.NavigateTo($"/edit/artist/{id}");
    }

    private async Task DeleteArtist(int id)
    {
        bool confirmed = await JS.InvokeAsync<bool>("confirm", $"Are you sure you want to delete this artist?");
        if (confirmed)
        {
            await ArtistService.DeleteAsync(id);
            artists = await ArtistService.GetAllAsync();
            totalPages = (int)Math.Ceiling(artists.Count / (double)itemsPerPage);
            ChangePage(currentPage);
        }
    }

    private void NavigateToAddArtist()
    {
        NavManager.NavigateTo("/addartist");
    }

    private void NavigateToArtist(int id)
    {
        NavManager.NavigateTo($"/artist/{id}");
    }
}
