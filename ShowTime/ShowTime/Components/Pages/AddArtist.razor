@page "/addartist"
@inject IArtistService ArtistService
@inject NavigationManager NavManager
@using ShowTime_BusinessLogic.Abstractions
@using ShowTime_BusinessLogic.Dtos
@rendermode InteractiveServer

<div class="add-artist-page">
    <div class="background-visual"></div>

    <div class="add-artist-intro">
        <h1>Add Artist to the Festival!</h1>
        <p>Complete the form below to register a new artist in the ShowTime lineup.</p>
    </div>

    <div class="festival-badge">
        <span><i class="fas fa-star"></i> Official Festival Entry Form</span>
    </div>

    <div class="artist-form-wrapper">
        <div class="artist-pass-card">
            <h2>🎤 Artist Pass</h2>
            <EditForm Model="artist" OnValidSubmit="SubmitArtist" FormName="AddArtistForm">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-icon-label">
                    <i class="fas fa-user"></i>
                    <label>Name:</label>
                </div>
                <InputText @bind-Value="artist.Name" class="form-control" />

                <div class="form-icon-label">
                    <i class="fas fa-music"></i>
                    <label>Genre:</label>
                </div>

                <InputSelect @bind-value="artist.Genre" class="form-control" required>
                    <option disabled value="">-- Choose Genre --</option>
                    <option value="Pop">Pop</option>
                    <option value="Rock">Rock</option>
                    <option value="Hip-Hop">Hip-Hop</option>
                    <option value="Rap">Rap</option>
                    <option value="Kpop">Kpop</option>
                    <option value="Jazz">Jazz</option>
                    <option value="Alternative Rock">Alternative Rock</option>
                    <option value="Electronic">Electronic</option>
                    <option value="Classical">Classical</option>
                    <option value="R&B">R&B</option>
                    <option value="Indie">Indie</option>
                    <option value="Metal">Metal</option>
                    <option value="Reggae">Reggae</option>
                    <option value="Funk">Funk</option>
                    <option value="Blues">Blues</option>
                    <option value="Country">Country</option>
                    <option value="Folk">Folk</option>
                    <option value="Disco">Disco</option>
                    <option value="Techno">Techno</option>
                </InputSelect>

                <div class="form-icon-label">
                    <i class="fas fa-image"></i>
                    <label>Image URL:</label>
                </div>
                <InputText @bind-Value="artist.Image" class="form-control" @oninput="PreviewImage" />

                <div class="image-preview-box">
                    @if (!string.IsNullOrEmpty(artist.Image))
                    {
                        <img src="@artist.Image" alt="Preview" class="preview-image" />
                    }
                </div>

                <div class="badge-preview">
                    <span class="badge-item">🏆 Rock Star</span>
                    <span class="badge-item">🎧 DJ</span>
                    <span class="badge-item">🔥 Headliner</span>
                </div>

                <button class="btn-submit" type="submit">Add Artist</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private ArtistCreateDto artist { get; set; } = new();
    private string SpotifyEmbedUrl;
    private string genre { get; set; }

    private async Task SubmitArtist()
    {
        if (string.IsNullOrWhiteSpace(artist.Name) ||
            string.IsNullOrWhiteSpace(artist.Genre) ||
            string.IsNullOrWhiteSpace(artist.Image))
        {
            return; 
        }

        await ArtistService.AddAsync(artist);
        artist = new();
        NavManager.NavigateTo("/artists");
    }


    private void PreviewImage(ChangeEventArgs e)
    {
        var url = artist.Image?.Trim();

        SpotifyEmbedUrl = null;

        if (string.IsNullOrWhiteSpace(url))
            return;
    }

}
