@page "/booking"
@using Microsoft.AspNetCore.Authorization
@using ShowTime_BusinessLogic.Abstractions
@using ShowTime_BusinessLogic.Dtos.Booking
@using ShowTime_BusinessLogic.Dtos.Festival
@inject IBookingService BookingService
@inject IFestivalService FestivalService
@inject NavigationManager Navigation
@inject Microsoft.AspNetCore.Components.NavigationManager NavManager
@inject IHttpContextAccessor HttpContextAccessor
@rendermode InteractiveServer
@attribute [StreamRendering]
@attribute [Authorize(Roles = "Administrator")]

<div class="booking-page">
    <!-- Enhanced Festival Decorations -->
    <div class="festival-decoration">
        @for (int i = 0; i < 25; i++)
        {
            <div class="sparkle" style="left: @(Random.Shared.Next(0, 100))%; top: @(Random.Shared.Next(0, 100))%; animation-delay: @(Random.Shared.Next(0, 4000))ms;"></div>
        }
        
        @for (int i = 0; i < 12; i++)
        {
            <div class="floating-element music-note" style="left: @(Random.Shared.Next(5, 95))%; animation-delay: @(Random.Shared.Next(0, 12000))ms;">‚ô™</div>
        }
        
        @for (int i = 0; i < 8; i++)
        {
            <div class="soft-glow" style="left: @(Random.Shared.Next(10, 90))%; top: @(Random.Shared.Next(20, 80))%; animation-delay: @(Random.Shared.Next(0, 8000))ms;"></div>
        }
        
        @for (int i = 0; i < 6; i++)
        {
            <div class="geometric-shape triangle" style="left: @(Random.Shared.Next(5, 95))%; top: @(Random.Shared.Next(10, 90))%; animation-delay: @(Random.Shared.Next(0, 8000))ms;"></div>
        }
        
        @for (int i = 0; i < 8; i++)
        {
            <div class="geometric-shape circle" style="left: @(Random.Shared.Next(5, 95))%; top: @(Random.Shared.Next(10, 90))%; animation-delay: @(Random.Shared.Next(0, 6000))ms;"></div>
        }
    </div>

    <div class="booking-container">
        <div class="booking-header">
            <h1 class="booking-title">
                <span class="title-sparkle">‚ú®</span>
                <span class="title-icon">üé´</span>
                Festival Ticket Booking
                <span class="title-icon">üé´</span>
                <span class="title-sparkle">‚ú®</span>
            </h1>
            <div class="booking-decoration">
                <span>üé™</span>
                <span>üé§</span>
                <span>üéµ</span>
                <span>üéß</span>
                <span>üé™</span>
            </div>
        </div>

        @if (showTicketPreview && bookingResponse != null)
        {
            <div class="ticket-preview-section">
                <h2 class="section-title">üé´ Your Festival Ticket</h2>
                <div class="ticket-container">
                    <div class="festival-ticket">
                        <div class="ticket-header">
                            <div class="ticket-logo">
                                <img src="/images/Showtime-logo.png" alt="ShowTime" />
                            </div>
                            <div class="ticket-type-badge">
                                <span class="badge-text">@bookingResponse.TicketNumber</span>
                            </div>
                        </div>
                        
                        <div class="ticket-body">
                            <div class="festival-info">
                                <h3 class="festival-name">@bookingResponse.FestivalName</h3>
                                <div class="festival-details">
                                    <div class="detail-item">
                                        <i class="fas fa-calendar"></i>
                                        <span>@(bookingResponse.FestivalDate?.ToString("MMMM dd, yyyy"))</span>
                                    </div>
                                    <div class="detail-item">
                                        <i class="fas fa-map-marker-alt"></i>
                                        <span>@bookingResponse.Location</span>
                                    </div>
                                    <div class="detail-item">
                                        <i class="fas fa-ticket-alt"></i>
                                        <span>@bookingForm.TicketType</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="customer-info">
                                <div class="customer-name">@bookingForm.CustomerName</div>
                                <div class="customer-email">@bookingForm.CustomerEmail</div>
                            </div>
                            
                            <div class="ticket-features">
                                @if (bookingForm.IncludeCamping)
                                {
                                    <div class="feature-badge camping">
                                        <i class="fas fa-campground"></i>
                                        <span>Camping</span>
                                    </div>
                                }
                                @if (bookingForm.IncludeFoodPackage)
                                {
                                    <div class="feature-badge food">
                                        <i class="fas fa-utensils"></i>
                                        <span>Food Package</span>
                                    </div>
                                }
                                @if (bookingForm.IncludeTransportation)
                                {
                                    <div class="feature-badge transport">
                                        <i class="fas fa-shuttle-van"></i>
                                        <span>Transportation</span>
                                    </div>
                                }
                            </div>
                            
                            <div class="ticket-price">
                                <div class="price-label">Total Price</div>
                                <div class="price-amount">$@bookingResponse.TotalPrice.ToString("F2")</div>
                            </div>
                        </div>
                        
                        <div class="ticket-footer">
                            <div class="ticket-barcode">
                                <div class="barcode-lines">
                                    @for (int i = 0; i < 20; i++)
                                    {
                                        <div class="barcode-line" style="height: @(Random.Shared.Next(20, 60))px;"></div>
                                    }
                                </div>
                                <div class="barcode-number">@bookingResponse.TicketNumber</div>
                            </div>
                            <div class="ticket-terms">
                                <small>Valid for one-time entry. Non-transferable. No refunds.</small>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="ticket-actions">
                    <button class="btn btn-primary" @onclick="ConfirmBooking">
                        <i class="fas fa-check"></i>
                        Confirm Booking
                    </button>
                    <button class="btn btn-secondary" @onclick="EditBooking">
                        <i class="fas fa-edit"></i>
                        Edit Booking
                    </button>
                </div>
            </div>
        }
        else
        {
            <div class="booking-content">
                @if (festivalIdFromQuery.HasValue && selectedFestival != null)
                {
                    <div class="booking-festival-preview" style="display: flex; flex-direction: column; align-items: center; margin-bottom: 2rem;">
                        <div class="festival-image" style="margin-bottom: 1rem; display: flex; justify-content: center;">
                            <img src="@selectedFestival.SplashArt" alt="@selectedFestival.Name" style="max-width: 220px; border-radius: 16px; box-shadow: 0 4px 24px rgba(0,0,0,0.18); display: block; margin: 0 auto;" />
                        </div>
                        <div class="festival-info" style="text-align: center;">
                            <h2 class="festival-name" style="margin-bottom: 0.5rem;">@selectedFestival.Name</h2>
                            <div class="festival-date" style="margin-bottom: 0.2rem;">üìÖ @selectedFestival.StartDate.ToString("MMMM dd, yyyy")</div>
                            <div class="festival-location">üìç @selectedFestival.Location</div>
                        </div>
                    </div>
                }
                @if (festivalIdFromQuery.HasValue)
                {
                    <div class="booking-form-section">
                        <h2 class="section-title">üé´ Book Your Tickets</h2>
                        <EditForm Model="bookingForm" OnValidSubmit="CreateBooking">
                            <DataAnnotationsValidator />
                            
                            <div class="form-grid">
                                <div class="form-group">
                                    <label for="ticketType">Ticket Type</label>
                                    <InputSelect id="ticketType" @bind-Value="bookingForm.TicketType" class="form-control">
                                        <option value="">Select Ticket Type</option>
                                        <option value="VIP">VIP - $299.99</option>
                                        <option value="Premium">Premium - $199.99</option>
                                        <option value="Standard">Standard - $99.99</option>
                                        <option value="Early Bird">Early Bird - $79.99</option>
                                    </InputSelect>
                                    <ValidationMessage For="@(() => bookingForm.TicketType)" />
                                </div>

                                <div class="form-group">
                                    <label for="quantity">Quantity</label>
                                    <InputNumber id="quantity" @bind-Value="bookingForm.Quantity" class="form-control" min="1" max="10" />
                                    <ValidationMessage For="@(() => bookingForm.Quantity)" />
                                </div>

                                <div class="form-group">
                                    <label for="customerName">Full Name</label>
                                    <InputText id="customerName" @bind-Value="bookingForm.CustomerName" class="form-control" />
                                    <ValidationMessage For="@(() => bookingForm.CustomerName)" />
                                </div>

                                <div class="form-group">
                                    <label for="customerEmail">Email</label>
                                    <InputText id="customerEmail" @bind-Value="bookingForm.CustomerEmail" class="form-control" type="email" />
                                    <ValidationMessage For="@(() => bookingForm.CustomerEmail)" />
                                </div>

                                <div class="form-group">
                                    <label for="customerPhone">Phone</label>
                                    <InputText id="customerPhone" @bind-Value="bookingForm.CustomerPhone" class="form-control" type="tel" />
                                    <ValidationMessage For="@(() => bookingForm.CustomerPhone)" />
                                </div>

                                <div class="form-group full-width">
                                    <label for="specialRequests">Special Requests</label>
                                    <InputTextArea id="specialRequests" @bind-Value="bookingForm.SpecialRequests" class="form-control" rows="3" />
                                </div>
                            </div>

                            <div class="additional-services">
                                <h3>Additional Services</h3>
                                <div class="services-grid">
                                    <div class="service-option">
                                        <InputCheckbox id="camping" @bind-Value="bookingForm.IncludeCamping" />
                                        <label for="camping">
                                            <i class="fas fa-campground"></i>
                                            <span>Camping Package (+$50)</span>
                                        </label>
                                    </div>
                                    <div class="service-option">
                                        <InputCheckbox id="food" @bind-Value="bookingForm.IncludeFoodPackage" />
                                        <label for="food">
                                            <i class="fas fa-utensils"></i>
                                            <span>Food Package (+$30)</span>
                                        </label>
                                    </div>
                                    <div class="service-option">
                                        <InputCheckbox id="transport" @bind-Value="bookingForm.IncludeTransportation" />
                                        <label for="transport">
                                            <i class="fas fa-shuttle-van"></i>
                                            <span>Transportation (+$25)</span>
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div class="price-summary">
                                <h3>Price Summary</h3>
                                <div class="price-breakdown">
                                    <div class="price-item">
                                        <span>Base Ticket:</span>
                                        <span>$@GetBasePrice()</span>
                                    </div>
                                    @if (bookingForm.IncludeCamping)
                                    {
                                        <div class="price-item">
                                            <span>Camping:</span>
                                            <span>+$50</span>
                                        </div>
                                    }
                                    @if (bookingForm.IncludeFoodPackage)
                                    {
                                        <div class="price-item">
                                            <span>Food Package:</span>
                                            <span>+$30</span>
                                        </div>
                                    }
                                    @if (bookingForm.IncludeTransportation)
                                    {
                                        <div class="price-item">
                                            <span>Transportation:</span>
                                            <span>+$25</span>
                                        </div>
                                    }
                                    <div class="price-total">
                                        <span>Total:</span>
                                        <span>$@GetTotalPrice()</span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-ticket-alt"></i>
                                    Preview Ticket
                                </button>
                                <button type="button" class="btn btn-secondary" @onclick="ResetForm">
                                    <i class="fas fa-undo"></i>
                                    Reset
                                </button>
                            </div>
                        </EditForm>
                    </div>
                }
                else
                {
                    <div class="festival-selection">
                        <h2 class="section-title">üé™ Select Your Festival</h2>
                        <div class="festival-grid">
                            @if (festivals != null)
                            {
                                @foreach (var festival in festivals)
                                {
                                    <div class="festival-card @(selectedFestival?.Id == festival.Id ? "selected" : "")" @onclick="() => SelectFestival(festival)">
                                        <div class="festival-image">
                                            <img src="@festival.SplashArt" alt="@festival.Name" />
                                        </div>
                                        <div class="festival-info">
                                            <h3>@festival.Name</h3>
                                            <p class="festival-date">@festival.StartDate.ToString("MMMM dd, yyyy")</p>
                                            <p class="festival-location">@festival.Location</p>
                                            <div class="festival-features">
                                                @if (festival.HasCamping)
                                                {
                                                    <span class="feature-tag">üèïÔ∏è Camping</span>
                                                }
                                                @if (festival.HasFoodCourt)
                                                {
                                                    <span class="feature-tag">üçî Food Court</span>
                                                }
                                                @if (festival.HasAfterParty)
                                                {
                                                    <span class="feature-tag">üéâ After Party</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    private List<FestivalGetDto>? festivals;
    private FestivalGetDto? selectedFestival;
    private BookingCreateDto bookingForm = new();
    private BookingResponseDto? bookingResponse;
    private bool showTicketPreview = false;
    private int? festivalIdFromQuery = null;
    private string? currentUserEmail;
    private int? currentUserId;

    protected override async Task OnInitializedAsync()
    {
        await LoadFestivals();
        await PreselectFestivalFromQuery();
        // Get current user email and user ID from claims
        var user = HttpContextAccessor?.HttpContext?.User;
        if (user != null && user.Identity != null && user.Identity.IsAuthenticated)
        {
            currentUserEmail = user.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Email)?.Value;
            var idClaim = user.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
            if (int.TryParse(idClaim, out var userId))
            {
                currentUserId = userId;
            }
        }
    }

    private async Task LoadFestivals()
    {
        try
        {
            festivals = (await FestivalService.GetAllAsync()).ToList();
        }
        catch (Exception ex)
        {
            // Handle error
        }
    }

    private async Task PreselectFestivalFromQuery()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("festivalId", out var festivalIdStr))
        {
            if (int.TryParse(festivalIdStr, out int festivalId) && festivals != null)
            {
                festivalIdFromQuery = festivalId;
                var fest = festivals.FirstOrDefault(f => f.Id == festivalId);
                if (fest != null)
                {
                    SelectFestival(fest);
                }
            }
        }
    }

    private void SelectFestival(FestivalGetDto festival)
    {
        selectedFestival = festival;
        bookingForm.FestivalId = festival.Id;
    }

    private async Task CreateBooking()
    {
        if (selectedFestival == null) return;
        try
        {
            // Associate booking with current user if logged in
            if (!string.IsNullOrEmpty(currentUserEmail))
            {
                bookingForm.CustomerEmail = currentUserEmail;
            }
            if (currentUserId.HasValue)
            {
                bookingForm.UserId = currentUserId.Value;
            }
            bookingResponse = await BookingService.CreateBookingAsync(bookingForm);
            if (bookingResponse.Success)
            {
                ShowTime_BusinessLogic.Dtos.Booking.BookingConfirmationState.LastBooking = bookingResponse;
                showTicketPreview = true;
            }
        }
        catch (Exception ex)
        {
            // Handle error
        }
    }

    private async Task ConfirmBooking()
    {
        // Here you would typically process payment and confirm the booking
        Navigation.NavigateTo("/booking-confirmation");
    }

    private void EditBooking()
    {
        showTicketPreview = false;
    }

    private void ResetForm()
    {
        bookingForm = new();
        selectedFestival = null;
        showTicketPreview = false;
    }

    private decimal GetBasePrice()
    {
        return bookingForm.TicketType?.ToLower() switch
        {
            "vip" => 299.99m,
            "premium" => 199.99m,
            "standard" => 99.99m,
            "early bird" => 79.99m,
            _ => 0m
        };
    }

    private decimal GetTotalPrice()
    {
        decimal basePrice = GetBasePrice() * bookingForm.Quantity;
        decimal additionalServices = 0;

        if (bookingForm.IncludeCamping) additionalServices += 50 * bookingForm.Quantity;
        if (bookingForm.IncludeFoodPackage) additionalServices += 30 * bookingForm.Quantity;
        if (bookingForm.IncludeTransportation) additionalServices += 25 * bookingForm.Quantity;

        return basePrice + additionalServices;
    }
}
